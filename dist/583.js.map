{"version":3,"sources":["webpack://microlib-example/./src/config/accounts.js","webpack://microlib-example/./src/config/index.js","webpack://microlib-example/./src/domain/bind-adapters.js","webpack://microlib-example/./src/domain/index.js","webpack://microlib-example/./src/domain/mixins.js","webpack://microlib-example/./src/domain/utils.js","webpack://microlib-example/./src/event-dispatcher.js","webpack://microlib-example/./src/service-registry.js","webpack://microlib-example/./test/mock/address-service.js","webpack://microlib-example/./test/mock/event-service.js","webpack://microlib-example/./test/mock/index.js","webpack://microlib-example/./test/mock/inventory-service.js","webpack://microlib-example/./test/mock/payment-service.js","webpack://microlib-example/./test/mock/shipping-service.js"],"names":["Accounts","endpoint","modelName","factory","dependencies","acctid","makeAdapters","ports","adapters","services","Object","keys","map","port","service","e","console","warn","message","reduce","p","c","validateSpec","spec","missing","filter","key","length","Error","entries","makeModel","mixins","concat","GlobalMixins","bindAdapters","models","values","modelSpecs","prevmodel","Symbol","validations","mixinType","pre","post","mixinSets","premixins","postmixins","processUpdate","model","changes","JSON","parse","stringify","updates","compose","updated","updateMixins","type","o","name","cb","mixinSet","Map","has","set","eventMask","update","create","onload","handleUpdateEvent","event","isUpdate","decrypted","decrypt","isObject","containsUpdates","changeList","every","k","util","validateModel","input","v","sort","a","b","order","apply","output","enableValidation","onUpdate","enableEvent","onCreate","onCreateAndUpdate","onLoad","onAll","never","enabled","addValidation","config","some","parseKeys","propKeys","flat","RegExp","test","encryptProperties","encryptProps","obj","encrypt","freezeProperties","preventUpdates","mutations","includes","requireProperties","requireProps","hashPasswords","hashPwds","hash","internalPropList","allowProperties","rejectUnknownProps","allowList","unknownProps","rejectUnknownProperties","RegEx","email","ipv4Address","ipv6Address","phone","creditCard","ssn","expr","val","_expr","evaluateUniqueness","propVal","compareVal","unique","encrypted","listSync","propKey","Validator","tests","isValid","regex","maxnum","maxlen","validateProperties","validate","invalid","updateProperties","updaters","updateProps","u","invokePort","fn","args","log","func","then","execMethod","functionType","string","createMethod","withValidFormat","checkFormat","value","x","encryptPersonalInfo","funcs","initVal","reduceRight","composeAsync","Promise","resolve","asyncPipe","f","passwd","process","env","ENCRYPTION_PWD","algo","crypto","String","iv","Buffer","alloc","text","cipher","cipherText","decipher","data","digest","uuid","nanoid","makeArray","Array","isArray","makeObject","prop","async","promise","result","ok","object","asObject","asArray","error","EventDispatcher","adapter","Event","subscriptions","topic","callback","get","push","method","emitEvent","forEach","bind","Registry","eventNames","shipOrder","trackShipment","verifyDelivery","sendEvent","eventData","eventSource","eventName","setTimeout","eventTime","Date","toUTCString","eventType","generateShippingEventData","externalId","trackingId","shipmentId","proofOfDelivery","trackingStatus","generateShippingMessage","commandResp","inventoryCallbackFactory","inventoryCallback","warehouseAddress","commandArgs","replyChannel","warehouse_addr","shippingCallbackFactory","shippingCallback","_message","dispatcher","registerCallback","Address","validateAddress","address","shippingChannel","inventoryChannel","callbacks","responses","topics","handleEvents","req","res","body","topicName","find","msg","code","toString","response","send","listening","listen","notify","init","Inventory","pickOrder","lineItems","pickupAddress","Payment","authorizePayment","id","amount","source_id","customer_id","autocomplete","currency","payload","idempotency_key","amount_money","location_id","reference_id","note","app_fee_money","completePayment","orderNo","refundPayment","createEventMessage","requester","eventTarget","getTime","eventUuid","createCommandEvent","commandName","Shipping","serviceName","shipTo","shipFrom","signature","respondOn","returnShipment","getPayload","payloads","getProperty"],"mappings":"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A;;;;;;AAEO,IAAM6C,OAAO,GAAG;AACrB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQC,kBAVe,4BAWnBC,EAXmB,EAYnBC,MAZmB,EAanBC,SAbmB,EAcnBC,WAdmB,EAiBnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFAC,0BAEA,0EAFe,KAEf;AADAC,sBACA,0EADW,KACX;AACAhR,qBAAO,CAAC8I,GAAR,CAAY,6BAAZ;AACMmI,qBAFN,GAEgB;AACdC,+BAAe,EAAEP,EADH;AAEdQ,4BAAY,EAAE;AACZP,wBAAM,EAANA,MADY;AAEZI,0BAAQ,EAARA;AAFY,iBAFA;AAMdH,yBAAS,EAATA,SANc;AAOdE,4BAAY,EAAZA,YAPc;AAQdD,2BAAW,EAAXA,WARc;AASdM,2BAAW,EAAE,eATC;AAUdC,4BAAY,EAAE,QAVA;AAWdC,oBAAI,EAAE,mBAXQ;AAYdC,6BAAa,EAAE;AACbX,wBAAM,EAAE,EADK;AAEbI,0BAAQ,EAAE;AAFG;AAZD,eAFhB;AAmBA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAxDI,+CA8DO,MA9DP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+DD,GAhFoB;;AAkFrB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","file":"583.js","sourcesContent":["\n/**\n * @type {import('../domain/index').ModelSpecification}\n */\nconst Accounts = {\n  endpoint: 'accounts',\n  modelName: 'Accounts',\n  factory: dependencies => acctid => acctid\n}","export * from './orders'\nexport * from './accounts'\n\n// export * from './user'\n// export * from './customer'\n// export * from './inventory'\n// export * from './scheduled-job'\n","\"use strict\";\n\nexport default function makeAdapters(ports, adapters, services) {\n  if (!ports || !adapters) {\n    return;\n  }\n  return Object.keys(ports)\n    .map(port => {\n      if (!adapters[port]) {\n        return;\n      }\n\n      try {\n        return {\n          [port]: adapters[port](services[ports[port].service]),\n        };\n      } catch (e) {\n        console.warn(e.message);\n      }\n    })\n    .reduce((p, c) => ({ ...p, ...c }));\n}\n","'use strict'\n\n/**\n * @typedef {string} eventName\n */\n\n/**\n * @typedef  Model\n * @property {string} _Symbol_id - immutable/private uuid\n * @property {string} _Symbol_modelName - immutable/private name\n * @property {string} _Symbol_createTime - immutable/private createTime\n * @property {onUpdate} _Symbol_onUpdate - immutable/private update function\n * @property {onDelete} _Symbol_onDelete\n * @property {function(Object)} update - use this function to update model\n * specify changes in an object\n * @property {function()} toJSON - de/serialization logic\n * @property {function(eventName,function(eventName,Model):void)} addListener listen for domain events\n * @property {function(eventName,Model):Promise<void>} emit emit domain event\n * @property {function(function():Promise<Model>):Promise<Model>} [port] - when a\n * port is configured, the framework generates a function to invoke it. When data\n * arrives on the port, depending on the implementation, the port's adapter invokes\n * the callback specified in the port configuration, or as an argument to the port\n * function. The callback returns an updated Model, and control is returned to the\n * caller. Optionally, an event is fired to trigger the next port function to run\n * @property {function():Promise<any>} [relation] - when you configure a relation,\n * the framework generates a function that your code can call to run the query\n * @property {function(*):*} [command] - the framework will call any model method\n * you specify when passed as a parameter or query in an API call.\n */\n\n/**\n * @callback onUpdate called to handle model updates\n * @param {Model} model\n * @param {Object} changes\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback onDelete\n * @param {Model} model\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback validate called to handle model updates\n * @param {Model} model\n * @param {Object} changes\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback onLoad\n * @param {Model} savedModel rehydrated model\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @typedef {string} service - name of the service object to inject in adapter\n * @typedef {number} timeout - call to adapter will timeout after `timeout` milliseconds\n *\n * @typedef {{\n *  [x: string]: {\n *    service: service,\n *    timeout?: timeout,\n *    callback?: function({model: Model})\n *    errorCallback?: function({model: Model, port: string, error:Error}),\n *    timeoutCallback?: function({model: Model, port: string}),\n *    consumesEvent?:string,\n *    producesEvent?:string,\n *    type?:'inbound'|'outbound',\n *    disabled?: boolean,\n *    adapter?: string,\n *    circuitBreaker?: thresholds\n *  }\n * }} ports - input/output ports for the domain\n */\n\n/**\n * @typedef {{\n *  [x:string]: {\n *    errorRate:number\n *    callVolume:number,\n *    intervalMs:number,\n *    fallbackFn:function()\n *  },\n * }} thresholds - thresholds for different errors\n */\n\n/**\n * @typedef {{\n *  [x: string]: {\n *    modelName:string,\n *    type:\"oneToMany\"|\"oneToOne\"|\"manyToOne\",\n *    foreignKey:any,\n *  }\n * }} relations - define related domain entities\n *\n * @typedef {Array<function({\n *  eventName:string,\n *  eventType:string,\n *  eventTime:string,\n *  modelName:string,\n *  model:Model\n * }):Promise<void>>} eventHandler - callbacks invoked to handle domain and\n * application events\n */\n\n/**\n *\n * @typedef {string} key\n * @typedef {*} value\n */\n\n/**\n * @typedef {{\n *  on: \"serialize\" | \"deserialize\",\n *  key: string | RegExp | \"*\" | (function(key,value):boolean)\n *  type: \"string\" | \"object\" | \"number\" | \"function\" | \"any\" | (function(key,value):boolean)\n *  value(key, value):value\n * }} serializer\n */\n/**\n * @typedef {{\n *  [x:string]: {\n *    allow:string|function(*):boolean|Array<string|function(*):boolean>\n *    deny:string|function(*):boolean|Array<string|function(*):boolean>\n *    type:\"role\"|\"relation\"|\"command\"\n *    desc?:string\n *  }\n * }} accessControlList\n */\n/**\n * @typedef {{\n *  [x: string]: {\n *    command:string|function(Model):Promise<any>,\n *    acl:accessControlList[]\n *  }\n * }} commands - configure functions to execute when specified in a\n * URL parameter or query of the auto-generate REST API\n */\n\n/**\n * @typedef {{\n *  [x: string]: {\n *    endpointUri: string,\n *    port:ports[p],\n *    method:'get'|'post'|'patch'|'delete'\n *    callback: ({\n *      body:string,\n *      headers:{},\n *      params:{},\n *      query:{}}) => Promise<{\n *        body,status,headers,\n *      }>\n *    })\n * }} endpoints\n */\n\n/**\n * @callback modelSpecFactoryFn\n * @param {object} dependencies\n * @returns {function(...args):Readonly<object>}\n */\n\n/**\n * @typedef {object} ModelSpecification Specify domain model properties and functions\n * @property {string} modelName name of model (case-insenstive)\n * @property {string} endpoint URI reference (e.g. plural of `modelName` noun)\n * @property {modelSpecFactoryFn} factory returns factory function that creates the model instance\n * @property {object} [dependencies] injected into the model for inverted dependency/control\n * @property {Array<import(\"./mixins\").functionalMixin>} [mixins] - use functional mixins\n * to compose the object from common domain logic, like input validation.\n * @property {onUpdate} [onUpdate] - Function called to handle update requests. Called\n * before save.\n * @property {onDelete} [onDelete] - Function called before deletion.\n * @property {validate} [validate] - called to validate model updates\n * @property {ports} [ports] - input/output ports for the domain\n * @property {eventHandler[]} [eventHandlers] - callbacks invoked to handle application\n * events, e.g. CRUD events\n * @property {serializer[]} [serializers] - use for custom de/serialization of the model\n * when reading or writing to storage or network\n * @property {relations} [relations] - create related models or query in aggregate\n * @property {commands} [commands] - define functions to execute when specified in a\n * URL parameter or query of the auto-generated REST API\n * @property {accessControlList} [accessControlList] - configure authorization\n * @property {endpoints} [endpoints] - additional custom API endpoints - specify inbound port\n * @property {{factory:import(\"../adapters/datasources/datasource-mongodb\"),url:string,credentials?:string}} [datasource] - custom datasource\n * for this model. If not set, the default set by the server is used.\n *\n */\n\nimport GlobalMixins from './mixins'\nimport bindAdapters from './bind-adapters'\n// Service dependencies\nimport * as services from '../../test/mock'\nimport * as adapters from '../adapters'\n// Model properties\nimport * as modelSpecs from '../config'\n\nfunction validateSpec (spec) {\n  const missing = ['modelName', 'endpoint', 'factory'].filter(key => !spec[key])\n  if (missing?.length > 0) {\n    throw new Error(\n      `missing properties: ${missing}, spec: ${Object.entries(spec)}`\n    )\n  }\n}\n\n/**\n * @param {ModelSpecification} spec\n * @param {*} dependencies - services injected\n */\nfunction makeModel (spec) {\n  validateSpec(spec)\n  const mixins = spec.mixins || []\n  const dependencies = spec.dependencies || {}\n  return {\n    ...spec,\n    mixins: mixins.concat(GlobalMixins),\n    dependencies: {\n      ...dependencies,\n      ...bindAdapters(spec.ports, adapters, services)\n    }\n  }\n}\n\nexport const models = Object.values(modelSpecs).map(spec => makeModel(spec))\n","'use strict'\n\nimport { hash, encrypt, decrypt, compose } from '../domain/utils'\nimport util from 'util'\n\n/**\n * Functional mixin created by `functionalMixinFactory`\n * @callback functionalMixin\n * @param {Object} o Object to compose\n * @returns {Object} Composed object\n */\n\n/**\n * Functional mixin factory - partial application - returns mixin function\n * @callback functionalMixinFactory\n * @param {*} mixinParams params for mixin function\n * @returns {functionalMixin}\n */\n\n/**\n * @typedef {import(\"../domain/index\").Model} Model\n */\n\n/**\n * Private key to access previous version of the model\n */\nexport const prevmodel = Symbol('prevModel')\n/**\n * private key to access validation config\n */\nexport const validations = Symbol('validations')\n/**\n * Process mixin pre or post update\n */\nexport const mixinType = {\n  pre: Symbol('pre'),\n  post: Symbol('post')\n}\n\n/**\n * Stored mixins - use private symbol as key to prevent overwrite\n */\nexport const mixinSets = {\n  [mixinType.pre]: Symbol('preUpdateMixins'),\n  [mixinType.post]: Symbol('postUpdateMixins')\n}\n\n/**\n * Set of pre mixins\n */\nconst premixins = mixinSets[mixinType.pre]\n/**\n * Set of post mixins\n */\nconst postmixins = mixinSets[mixinType.post]\n\n/**\n * Apply any pre and post mixins and return the result.\n * @deprecated\n * @param {*} model - current model\n * @param {*} changes - object containing changes\n * @returns {import('.').Model} updated model\n */\nexport function processUpdate (model, changes) {\n  changes[prevmodel] = JSON.parse(JSON.stringify(model)) // keep history\n\n  const updates = model[premixins]\n    ? compose(...model[premixins].values())(changes)\n    : changes\n\n  const updated = { ...model, ...updates }\n\n  return model[postmixins]\n    ? compose(...model[postmixins].values())(updated)\n    : updated\n}\n\n/**\n * @deprecated\n * Store mixins for execution on update\n * @param {mixinType} type\n * run before changes are applied or afterward\n * @param {*} o  Object containing changes to apply (pre)\n * or new object after changes have been applied (post)\n * @param {string} name `Function.name`\n * @param {functionalMixin} cb mixin function\n */\nexport function updateMixins (type, o, name, cb) {\n  if (!mixinSets[type]) {\n    throw new Error('invalid mixin type')\n  }\n\n  const mixinSet = o[mixinSets[type]] || new Map()\n\n  if (!mixinSet.has(name)) {\n    mixinSet.set(name, cb())\n\n    return {\n      ...o,\n      [mixinSets[type]]: mixinSet\n    }\n  }\n  return o\n}\n\n/**\n * bitmask for identifying events\n */\nconst eventMask = {\n  update: 1, //  0001 Update\n  create: 1 << 1, //  0010 Create\n  onload: 1 << 2 //  0100 Load\n}\n\nfunction handleUpdateEvent (model, updates, event) {\n  const isUpdate = eventMask.update & event\n  const decrypted = isUpdate ? model.decrypt() : {}\n  return {\n    ...model,\n    ...updates,\n    ...decrypted\n  }\n}\n\nfunction isObject (p) {\n  return p != null && typeof p === 'object'\n}\n\nfunction containsUpdates (model, changes, event) {\n  if (eventMask.update & event) {\n    const changeList = Object.keys(changes)\n    if (changeList.length < 1) return false\n\n    if (\n      changeList.every(\n        k => model[k] && util.isDeepStrictEqual(changes[k], model[k])\n      )\n    ) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * Run validation functions enabled for a given event.\n * @param {Model} model - the composed object\n * @param {*} changes - object containing changes\n * @param {Number} event - Indicates what event is occuring:\n * 1st bit turned on means update, 2nd bit create, 3rd load,\n * see {@link eventMask}.\n */\nexport function validateModel (model, changes, event) {\n  // if there are no changes, and the event is an update, return\n  if (!containsUpdates(model, changes, event)) {\n    return model\n  }\n\n  // keep a history of the last saved model\n  const input = { ...changes, [prevmodel]: JSON.parse(JSON.stringify(model)) }\n\n  // Validate just the input data\n  const updates = model[validations]\n    .filter(v => v.input & event)\n    .sort((a, b) => a.order - b.order)\n    .map(v => model[v.name].apply(input))\n    .reduce((p, c) => ({ ...p, ...c }), input)\n\n  const updated = { ...model, ...updates }\n\n  // Validate the updated model\n  return updated[validations]\n    .filter(v => v.output & event)\n    .sort((a, b) => a.order - b.order)\n    .map(v => updated[v.name]())\n    .reduce((p, c) => ({ ...p, ...c }), updated)\n}\n\n/**\n * Specify when validations run.\n */\nconst enableValidation = (() => {\n  const onUpdate = enableEvent(true, false, false)\n  const onCreate = enableEvent(false, true, false)\n  const onCreateAndUpdate = enableEvent(true, true, false)\n  const onLoad = enableEvent(false, false, true)\n  const onAll = enableEvent(true, true, true)\n  const never = enableEvent(false, false, false)\n  return {\n    /**\n     * Validation runs on update.\n     */\n    onUpdate,\n    /**\n     * Validation runs on create.\n     */\n    onCreate,\n    /**\n     * Validation runs on both create and update.\n     */\n    onCreateAndUpdate,\n    /**\n     * Validation runs on load.\n     */\n    onLoad,\n    /**\n     * Validation runs on all events.\n     */\n    onAll,\n    /**\n     * Validation runs on zero events (disabled).\n     */\n    never\n  }\n})()\n\n/**\n * Enable validation to run on specific events.\n * @param {boolean} onUpdate - whether or not to run the validation on update.\n * Defaults to `true`.\n * @param {boolean} onCreate - whether or not to run the validation on create.\n * Defaults to `true`.\n * @param {boolean} onLoad - whether or not to run the validation when\n * the object is being loaded into memory after being deserialized.\n * Defaults to `false`.\n */\nfunction enableEvent (onUpdate = true, onCreate = true, onLoad = false) {\n  let enabled = 0\n\n  if (onUpdate) {\n    enabled |= eventMask.update\n  }\n  if (onCreate) {\n    enabled |= eventMask.create\n  }\n  if (onLoad) {\n    enabled |= eventMask.onload\n  }\n  return enabled\n}\n\n/**\n * Add a validation function to be called for a given event.\n * @typedef {object} validationConfig\n * @property {*} o - the composed object\n * @property {string} name - name of function to run\n * @property {number} input - \"input\" validations run against\n * the data passed by the caller in the request. Use `enableValidation`\n * to provide a value for this param.\n * @property {number} output - \"output\" functions run against the\n * model after the changes have been applied.\n * @property {number} order - order in which validation runs\n * @param {validationConfig} param0\n */\nfunction addValidation ({ model, name, input = 0, output = 0, order = 50 }) {\n  const config = model[validations] || []\n\n  if (config.some(v => v.name === name)) {\n    console.warn('duplicate validation name', name)\n    return model\n  }\n\n  return {\n    ...model,\n    validateModel,\n    [validations]: [...config, { name, input, output, order }]\n  }\n}\n\n/**\n * Resolve keys:\n * If the value includes an array, flatten it, then for each element:\n * If the value is \"*\", return all keys of the object.\n * If the value is a function, execute it to get a dynamic key or key list.\n * If the value is a RegExp, test it to get dynamic key list.\n * If any of the above produce an array of keys, flatten it.\n * @param {*} o - Object to compose\n * @param  {Array<string | function(*):string>} propKeys -\n * Names (or functions that return names) of properties\n * @returns {string[]} list of (resolved) property keys\n */\nfunction parseKeys (o, ...propKeys) {\n  const keys = propKeys.flat().map(function (k) {\n    if (typeof k === 'function') return k(o)\n    if (k instanceof RegExp) return Object.keys(o).filter(key => k.test(key))\n    if (k === '*') return Object.keys(o)\n    return k\n  })\n  return keys.flat()\n}\n\n/**\n * Encrypt properties. Properties remain encrypted indefinitely, and\n * must be explicitly decrypted as needed, e.g. reading values in memory,\n * from storage, serializing and sending to an external system.\n * @param  {Array<string | function(*):string>} propKeys -\n * Names (or functions that return names) of properties to encrypt\n * @returns {functionalMixin} mixin function\n */\nexport const encryptProperties = (...propKeys) => o => {\n  const keys = parseKeys(o, ...propKeys)\n\n  const encryptProps = obj => {\n    return keys\n      .map(key => (obj[key] ? { [key]: encrypt(obj[key]) } : {}))\n      .reduce((p, c) => ({ ...p, ...c }))\n  }\n\n  return {\n    encryptProperties () {\n      return encryptProps(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: encryptProperties.name,\n      input: enableValidation.onUpdate,\n      output: enableValidation.onCreate,\n      order: 100\n    }),\n\n    decrypt () {\n      return keys\n        .map(key => (this[key] ? { [key]: decrypt(this[key]) } : {}))\n        .reduce((p, c) => ({ ...p, ...c }))\n    }\n  }\n}\n\n/**\n * Prevent properties from being modified.\n * Accepts a property name or a function that returns a property name.\n * @param  {Array<string | function(*):string | RegExp>} propKeys - names of properties to freeze\n */\nexport const freezeProperties = (...propKeys) => o => {\n  const preventUpdates = obj => {\n    const keys = parseKeys(obj, ...propKeys)\n\n    const mutations = Object.keys(obj).filter(key => keys.includes(key))\n    if (mutations?.length > 0) {\n      throw new Error(`cannot update readonly properties: ${mutations}`)\n    }\n  }\n\n  return {\n    freezeProperties () {\n      preventUpdates(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: freezeProperties.name,\n      input: enableValidation.onUpdate,\n      order: 20\n    })\n  }\n}\n\n/**\n * Enforce required fields.\n * @param {Array<string | function(*):string | RegExp>} propKeys -\n * required property key names - can be a function or regex\n * that returns the property key names\n */\nexport const requireProperties = (...propKeys) => o => {\n  const keys = parseKeys(o, ...propKeys)\n\n  function requireProps (obj) {\n    const missing = keys.filter(key => key && !obj[key])\n    if (missing?.length > 0) {\n      throw new Error(`missing required properties: ${missing}`)\n    }\n  }\n  return {\n    requireProperties () {\n      requireProps(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: requireProperties.name,\n      output: enableValidation.onCreateAndUpdate,\n      order: 90\n    })\n  }\n}\n\n/**\n * Hash passwords.\n * @param {*} hash hash algorithm\n * @param  {Array<string | function(*):string | RegExp>} propKeys name of password props\n */\nexport const hashPasswords = (...propKeys) => o => {\n  const keys = parseKeys(o, ...propKeys)\n\n  function hashPwds (obj) {\n    return keys\n      .map(key => (obj[key] ? { [key]: hash(obj[key]) } : {}))\n      .reduce((p, c) => ({ ...p, ...c }))\n  }\n\n  return {\n    hashPasswords () {\n      return hashPwds(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: hashPasswords.name,\n      input: enableValidation.onUpdate,\n      output: enableValidation.onCreate,\n      order: 100\n    })\n  }\n}\n\nconst internalPropList = []\n\n/**\n * Reject unknown properties in user input. Allow only approved keys.\n * @param  {...any} propKeys\n */\nexport const allowProperties = (...propKeys) => o => {\n  function rejectUnknownProps () {\n    const keys = parseKeys(o, ...propKeys)\n    const allowList = keys.concat(internalPropList)\n\n    const unknownProps = Object.keys(o).filter(key => !allowList.includes(key))\n\n    if (unknownProps?.length > 0) {\n      throw new Error(`invalid properties: ${unknownProps}`)\n    }\n  }\n\n  return {\n    rejectUnknownProperties () {\n      return rejectUnknownProps(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: rejectUnknownProps.name,\n      input: enableValidation.onUpdate,\n      order: 10\n    })\n  }\n}\n\n/**\n * Test regular expressions\n */\nexport const RegEx = {\n  email: /^(.+)@(.+){2,}\\.(.+){2,}$/,\n  ipv4Address: /^([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])$/,\n  ipv6Address: /^((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*::((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*|((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4})){7}$/,\n  phone: /^[1-9]\\d{2}-\\d{3}-\\d{4}/,\n  creditCard: /^(?:4[0-9]{12}(?:[0-9]{3})?|[25][1-7][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/,\n  ssn: /^(?!666|000|9\\\\d{2})\\\\d{3}-(?!00)\\\\d{2}-(?!0{4})\\\\d{4}$/,\n  /**\n   * Allow caller to pass a keyword that refers to one of the regex above\n   * @param {regexType} expr\n   * @param {*} val\n   */\n  test (expr, val) {\n    const _expr =\n      Object.keys(this).includes(expr) && this[expr] instanceof RegExp\n        ? this[expr]\n        : expr\n    return _expr.test(val)\n  }\n}\n\n/**\n * @callback isValid\n * @param {Object} o - the property owner\n * @param {*} propVal - the property value\n * @returns {boolean} - true if valid\n *\n * @typedef {'email'|'phone'|'ipv4Address'|'ipv6Address'|'creditCard'|'ssn'|RegExp} regexType\n *\n * @typedef {{\n *  propKey:string,\n *  isValid?:isValid,\n *  values?:any[],\n *  regex?:regexType,\n *  maxlen?:number\n *  maxnum?:number\n *  typeof?:string\n *  unique?:{ encrypted:boolean }\n * }} validation\n */\n\nfunction evaluateUniqueness (v, o, propVal) {\n  const compareVal = v.unique.encrypted ? encrypt(propVal) : propVal\n  return o.listSync({ [v.propKey]: compareVal }).length < 1\n}\n\n/**\n * Run validation tests\n */\nconst Validator = {\n  tests: {\n    isValid: (v, o, propVal) => v.isValid(o, propVal),\n    values: (v, o, propVal) => v.values.includes(propVal),\n    regex: (v, o, propVal) => RegEx.test(v.regex, propVal),\n    typeof: (v, o, propVal) => v.typeof === typeof propVal,\n    maxnum: (v, o, propVal) => v.maxnum + 1 > propVal,\n    maxlen: (v, o, propVal) => v.maxlen + 1 > propVal.length,\n    unique: (v, o, propVal) => evaluateUniqueness(v, o, propVal)\n  },\n  /**\n   * Returns true if tests pass.\n   * @param {validation} v validation config\n   * @param {Object} o object to compose\n   * @param {*} propVal value of property to validate\n   * @returns {boolean} true if tests pass\n   */\n  isValid (v, o, propVal) {\n    return Object.keys(this.tests).every(key => {\n      if (v[key]) {\n        // the test `key` is specified, run it\n        return this.tests[key](v, o, propVal)\n      }\n      return true\n    })\n  }\n}\n\n/**\n * Verify a property value is a member of a list,\n * is unique within a set of model instances,\n * is of a certain length, size or type,\n * matches a regular expression,\n * or satisfies a custom validation function.\n * @param {validation[]} validations\n */\nexport const validateProperties = validations => o => {\n  function validate (obj) {\n    const invalid = validations.filter(v => {\n      const propVal = obj[v.propKey]\n\n      if (!propVal) {\n        return false\n      }\n      return !Validator.isValid(v, obj, propVal)\n    })\n\n    if (invalid?.length > 0) {\n      throw new Error(`invalid value for ${[...invalid.map(v => v.propKey)]}`)\n    }\n  }\n\n  return {\n    validateProperties () {\n      validate(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: validateProperties.name,\n      input: enableValidation.onUpdate,\n      output: enableValidation.onCreate,\n      order: 50\n    })\n  }\n}\n\n/**\n * @callback updaterFn\n * @param {Object} o\n * @param  {*} propVal\n * @returns {Object} object with updated properties\n *\n * @typedef {{\n * propKey: string,\n * update: updaterFn\n * }} updater\n */\n\n/**\n * Respond to property updates by updating addtional (dependent) properties as needed.\n * @param {updater[]} updaters\n */\nexport const updateProperties = updaters => o => {\n  function updateProps (obj) {\n    const updates = updaters.filter(u => obj[u.propKey])\n\n    if (updates?.length > 0) {\n      return updates\n        .map(u => u.update(o, obj[u.propKey]))\n        .reduce((p, c) => ({ ...p, ...c }))\n    }\n  }\n\n  return {\n    updateProperties () {\n      return updateProps(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: updateProperties.name,\n      input: enableValidation.onUpdate,\n      order: 30\n    })\n  }\n}\n\n/**\n * Set a validation that invokes a port. The port must be configured\n * in the `ModelSpecification`.\n * @param {string} fn - name of port (as it appears in the ModelSpec)\n * @param {boolean} onCreate - invoke on create\n * @param {boolean} onUpdate - invoke on update\n * @param  {...any} args - pass arguments\n */\nexport const invokePort = (fn, onCreate, onUpdate, ...args) => async o => {\n  return {\n    ...o,\n    invokePort () {\n      console.log({ func: 'invokePort', fn, args })\n      return this[fn](...args).then(o => o)\n    },\n\n    ...addValidation({\n      model: o,\n      name: 'invokePort',\n      output: enableValidation.onUpdate,\n      order: 85\n    })\n  }\n}\n\n/**\n * Set a validation that calls a model method or provided function.\n * @param {string|function(Model, ...any):Promise<any>} fn - callback function\n * or name of method to executee\n * @param {boolean} onCreate - invoke on create\n * @param {boolean} onUpdate - invoke on update\n * @param  {...any} args - pass arguments to the method/function\n * @return {Model}\n */\nexport const execMethod = (fn, onCreate, onUpdate, ...args) => async o => {\n  const functionType = {\n    function: (fn, obj, ...args) => fn(obj, ...args).then(o => o),\n    string: (fn, obj, ...args) => obj[fn](...args).then(o => o)\n  }\n\n  return {\n    ...o,\n    async execMethod () {\n      const model = await functionType[typeof fn](fn, this, ...args)\n      return model\n    },\n\n    ...addValidation({\n      model: o,\n      name: 'execMethod',\n      output: enableValidation.onUpdate,\n      order: 40\n    })\n  }\n}\n\n/**\n * Create a method on a model.\n * @param {*} fn\n * @param  {...any} args\n */\nexport const createMethod = (fn, ...args) => o => {\n  return {\n    ...o,\n    [fn.name]: () => fn(...args)\n  }\n}\n\n/**\n * Check the value of the property before returning its key.\n * @param {*} propKey\n * @param {regexType} expr\n * @returns {function(any):any} dynamic property func\n */\nexport const withValidFormat = (propKey, expr) => o => {\n  if (o[propKey] && !RegEx.test(expr, o[propKey])) {\n    throw new Error(`invalid ${propKey}`)\n  }\n  return propKey\n}\n\n/**\n *\n * @param {string} value\n * @param {regexType} expr\n */\nexport const checkFormat = (value, expr) => {\n  if (value && !RegEx.test(expr, value)) {\n    const x = expr instanceof RegExp ? value : expr\n    throw new Error(`${x} invalid`)\n  }\n}\n\n/**\n * Implement GDPR encryption requirement across models\n */\nexport const encryptPersonalInfo = encryptProperties(\n  /^last.*Name$|^surname$|^family.*Name$/i,\n  /^shipping.*Address$/i,\n  /^billing.*Address$/i,\n  /^home.*Address$/i,\n  /email|e-mail/i,\n  /^phone$|^home.*phone$/i,\n  /^mobile$|^mobile.*number$|^cell.*number$/i,\n  /^credit.*Card/i,\n  /^cvv$/i,\n  /^ssn$|^socialSecurity/i,\n  /^encrypted/i\n)\n\n/**\n * Global mixins\n */\nconst GlobalMixins = [encryptPersonalInfo]\n\nexport default GlobalMixins\n","'use strict'\n\nimport crypto from 'crypto'\nimport { nanoid } from 'nanoid'\n\nexport function compose (...funcs) {\n  return function (initVal) {\n    return funcs.reduceRight((val, func) => func(val), initVal)\n  }\n}\n\nexport function composeAsync (...funcs) {\n  return function (initVal) {\n    return funcs.reduceRight(\n      (val, func) => val.then(func),\n      Promise.resolve(initVal)\n    )\n  }\n}\n\n/**\n * @callback pipeFn\n * @param {object} obj - the object to compose\n * @returns {object} - the composed object\n */\n\n/**\n * @param {pipeFn} func\n */\nexport const asyncPipe = (...func) => obj =>\n  func.reduce((o, f) => o.then(f), Promise.resolve(obj))\n\nconst passwd = process.env.ENCRYPTION_PWD\nconst algo = 'aes-192-cbc'\nconst key = crypto.scryptSync(String(passwd), 'salt', 24)\nconst iv = Buffer.alloc(16, 0)\n\nexport function encrypt (text) {\n  const cipher = crypto.createCipheriv(algo, key, iv)\n  let encrypted = cipher.update(text, 'utf8', 'hex')\n  encrypted += cipher.final('hex')\n  return encrypted\n}\n\nexport function decrypt (cipherText) {\n  console.log('decrypt(%s)', cipherText)\n  const decipher = crypto.createDecipheriv(algo, key, iv)\n  let decrypted = decipher.update(cipherText, 'hex', 'utf8')\n  decrypted += decipher.final('utf8')\n  return decrypted\n}\n\nexport function hash (data) {\n  return crypto\n    .createHash('sha1')\n    .update(data)\n    .digest('hex')\n}\n\nexport function uuid () {\n  // return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\n  //   (c ^ (crypto.randomBytes(16)[0] & (15 >> (c / 4)))).toString(16)\n  // );\n  return nanoid()\n}\n\nexport function makeArray (v) {\n  return Array.isArray(v) ? v : [v]\n}\n\nexport function makeObject (prop) {\n  if (Array.isArray(prop)) {\n    return prop.reduce((p, c) => ({ ...p, ...c }))\n  }\n  return prop\n}\n\n/**\n *\n * @param {Promise<{\n * ok:()=>any,\n *\n * }} promise\n * @returns\n */\nexport function async (promise) {\n  return promise\n    .then(result => ({\n      ok: true,\n      object: result,\n      asObject: () => makeObject(result),\n      asArray: () => makeArray(result)\n    }))\n    .catch(error => {\n      console.error(error)\n      return Promise.resolve({ ok: false, error })\n    })\n}\n","\"use strict\";\n\nimport { Event } from \"./services/event-service\";\n\nexport class EventDispatcher {\n  constructor(adapter = Event) {\n    this.adapter = adapter;\n    this.subscriptions = new Map();\n  }\n\n  registerCallback(topic, callback) {\n    if (this.subscriptions.has(topic)) {\n      this.subscriptions.get(topic).push(callback);\n      return;\n    }\n    this.subscriptions.set(topic, [callback]);\n  }\n\n  async emitEvent(topic, message, method = \"notify\") {\n    await this.adapter[method](topic, message);\n  }\n\n  async init(method = \"listen\") {\n    function emitEvent(topic, message) {\n      this.emitEvent(topic, message);\n    }\n\n    // this.emitEvent(/Channel/, \"remoteRestart\");\n    await this.adapter[method](\n      /Channel/,\n      function ({ topic, message }) {\n        if (this.subscriptions.has(topic)) {\n          this.subscriptions\n            .get(topic)\n            .forEach(callback =>\n              callback({ message, emitEvent: emitEvent.bind(this) })\n            );\n        }\n      }.bind(this)\n    );\n  }\n}\n","\"use strict\";\n\nimport { EventDispatcher } from \"./event-dispatcher\";\nimport { uuid } from \"./domain/utils\";\n\nexport const Registry = {\n  eventNames: {\n    shipOrder: \"orderShipped\",\n    trackShipment: \"outForDelivery\",\n    verifyDelivery: \"deliveryVerified\",\n  },\n\n  sendEvent({ emitEvent, topic, eventData, eventSource, eventName }) {\n    console.log(\"Sending event...\");\n    console.log({ emitEvent, topic, eventData, eventSource, eventName });\n    setTimeout(async () => {\n      await emitEvent(\n        topic,\n        JSON.stringify({\n          eventData,\n          eventName,\n          eventTime: new Date().toUTCString(),\n          eventType: \"commandResponse\",\n          eventSource: eventSource,\n        })\n      );\n    }, 5000);\n  },\n\n  generateShippingEventData(event, externalId) {\n    const trackingId = uuid();\n    const shipmentId = trackingId;\n    const proofOfDelivery = `http://shipping.service.com?proof=${trackingId}`;\n    const eventData = { externalId };\n    if (event.eventName === \"shipOrder\") {\n      return { ...eventData, shipmentId };\n    }\n    if (event.eventName === \"trackShipment\") {\n      return { ...eventData, trackingId, trackingStatus: \"outForDelivery\" };\n    }\n    if (event.eventName === \"verifyDelivery\") {\n      return { ...eventData, proofOfDelivery };\n    }\n  },\n\n  generateShippingMessage(emitEvent, event, externalId) {\n    return {\n      emitEvent,\n      topic: event.eventData.commandResp,\n      eventData: this.generateShippingEventData(event, externalId),\n      eventName: this.eventNames[event.eventName],\n      eventSource: \"shippingService\",\n    };\n  },\n\n  inventoryCallbackFactory() {\n    function inventoryCallback({ message, emitEvent }) {\n      const event = JSON.parse(message);\n      const warehouseAddress = /*null;*/ \"1234 warehouse dr, dock 2\";\n      const externalId = event.eventData.commandArgs.externalId;\n      const eventName = /*'outOfStock';*/ \"orderPicked\";\n      this.sendEvent({\n        emitEvent,\n        topic: event.eventData.replyChannel,\n        eventName,\n        eventData: { warehouse_addr: warehouseAddress, externalId },\n        eventSource: \"inventoryService\",\n      });\n    }\n    return inventoryCallback.bind(this);\n  },\n\n  shippingCallbackFactory() {\n    function shippingCallback({ message, emitEvent }) {\n      const event = JSON.parse(message);\n      const externalId = event.eventData.commandArgs.externalId;\n      const _message = this.generateShippingMessage(\n        emitEvent,\n        event,\n        externalId\n      );\n      this.sendEvent(_message);\n\n      if (event.eventName === \"trackShipment\") {\n        const eventData = {\n          ..._message.eventData,\n          trackingStatus: \"orderDelivered\",\n        };\n        setTimeout(\n          () =>\n            this.sendEvent({\n              ..._message,\n              eventData,\n              eventName: \"orderDelivered\",\n            }),\n          7000\n        );\n      }\n    }\n    return shippingCallback.bind(this);\n  },\n};\n\nconst dispatcher = new EventDispatcher();\n\ndispatcher.registerCallback(\n  \"inventoryChannel\",\n  Registry.inventoryCallbackFactory()\n);\n\ndispatcher.registerCallback(\n  \"shippingChannel\",\n  Registry.shippingCallbackFactory()\n);\n\nexport default dispatcher;\n","\"use strict\";\n\nexport const Address = {\n  /**\n   *\n   * @param {string} address US street address\n   */\n  async validateAddress(address) {\n    console.log(\"test validating address...\");\n\n    if (!address) {\n      throw new Error(\"no address provided\");\n    }\n\n    return address;\n  },\n\n};\n","\"use strict\";\n\nimport { EventDispatcher } from \"../../src/event-dispatcher\";\nimport { Registry } from \"../../src/service-registry\";\n\nconst shippingChannel = \"shippingChannel\";\nconst inventoryChannel = \"inventoryChannel\";\n\nconst callbacks = [];\nconst responses = [];\nconst topics = {\n  [shippingChannel]: /shipping/,\n  [inventoryChannel]: /inventory/,\n};\n\nexport function handleEvents(req, res) {\n  const message = JSON.stringify(req.body);\n  const topicName = Object.keys(topics).find(k => topics[k].test(message));\n  if (topicName) {\n    console.log({\n      func: handleEvents.name,\n      msg: \"found topic\",\n      topicName,\n      message,\n      cb: callbacks,\n    });\n\n    callbacks.forEach(callback => {\n      console.log({ name: callback.name, code: callback.toString() });\n      callback({ topicName, message });\n    });\n    console.log(responses);\n    responses.reduceRight(response => res.send(response), \"response\");\n  }\n}\n\nconst Event = {\n  topics: /Channel/,\n  listening: false,\n\n  listen(topic, callback) {\n    callbacks.push(callback);\n  },\n\n  notify(topic, message) {\n    responses.push(message);\n  },\n};\n\nconst dispatcher = new EventDispatcher(Event);\n\ndispatcher.registerCallback(\n  inventoryChannel,\n  Registry.inventoryCallbackFactory()\n);\n\ndispatcher.registerCallback(\n  shippingChannel,\n  Registry.shippingCallbackFactory()\n);\n\ndispatcher.init();\n","export * from \"./address-service\";\nexport * from \"./payment-service\";\nexport * from \"./shipping-service\";\nexport * from \"./event-service\";\nexport * from \"./inventory-service\";\n","\"use strict\";\n\nimport { Event } from \"../../src/services/event-service\";\n\nfunction sendEvent({ eventData, eventName }) {\n  setTimeout(async () => {\n    await Event.notify(\n      \"orderChannel\",\n      JSON.stringify({\n        eventData,\n        eventName,\n        eventType: \"CommandResponse\",\n        eventTime: new Date().toUTCString(),\n        eventSource: \"Inventory\",\n      })\n    );\n  }, 5000);\n}\n\nexport const Inventory = {\n  async pickOrder({ externalId, lineItems }) {\n    console.log(\"inventory items\");\n    console.log(lineItems);\n    const pickupAddress = \"1234 warehouse dr, dock2\";\n    sendEvent({\n      eventName: \"orderPicked\",\n      eventData: { pickupAddress, externalId },\n    });\n  },\n};\n","\"use strict\";\n\n/**\n * @callback authorizePaymentType\n * @param {string} id\n * @param {number} amount\n * @param {string} source_id\n * @param {string} customer_id\n * @param {boolean} [autocomplete]\n * @returns {Promise<string>}\n */\n\n/**\n * @typedef PaymentService\n * @property {authorizePaymentType} authorizePayment\n * @property {function()} completePayment\n * @property {function()} refundPayment\n */\n\n// import { Client, Environment, ApiError } from \"square\";\n\n// const client = new Client({\n//   environment: Environment.Sandbox,\n//   accessToken: process.env.SQUARE_ACCESS_TOKEN,\n// });\n\nexport const Payment = {\n  /**\n   * @type {authorizePaymentType}\n   * @param {*} id\n   * @param {*} amount\n   * @param {*} source_id\n   * @param {*} customer_id\n   * @param {*} autocomplete\n   * @param {*} currency\n   */\n  async authorizePayment(\n    id,\n    amount,\n    source_id,\n    customer_id,\n    autocomplete = false,\n    currency = \"USD\"\n  ) {\n    console.log(\"mock payment service called\");\n    const payload = {\n      idempotency_key: id,\n      amount_money: {\n        amount,\n        currency,\n      },\n      source_id,\n      autocomplete,\n      customer_id,\n      location_id: \"XK3DBG77NJBFX\",\n      reference_id: \"123456\",\n      note: \"Brief description\",\n      app_fee_money: {\n        amount: 10,\n        currency: \"USD\",\n      },\n    };\n    /*\n    const bodyAmountMoney = {};\n    bodyAmountMoney.amount = 200;\n    bodyAmountMoney.currency = \"USD\";\n\n    const bodyTipMoney = {};\n    bodyTipMoney.amount = 198;\n    bodyTipMoney.currency = \"CHF\";\n\n    const bodyAppFeeMoney = {};\n    bodyAppFeeMoney.amount = 10;\n    bodyAppFeeMoney.currency = \"USD\";\n\n    const body = {\n      sourceId: \"ccof:uIbfJXhXETSP197M3GB\",\n      idempotencyKey: \"4935a656-a929-4792-b97c-8848be85c27c\",\n      amountMoney: bodyAmountMoney,\n    };\n\n    body.tipMoney = bodyTipMoney;\n    body.appFeeMoney = bodyAppFeeMoney;\n    body.delayDuration = \"delay_duration6\";\n    body.autocomplete = true;\n    body.orderId = \"order_id0\";\n    body.customerId = \"VDKXEEKPJN48QDG3BGGFAK05P8\";\n    body.locationId = \"XK3DBG77NJBFX\";\n    body.referenceId = \"123456\";\n    body.note = \"Brief description\";\n\n    // try {\n    //   const {\n    //     result,\n    //     ...httpResponse\n    //   } = await client.paymentsApi.createPayment(body);\n    //   // Get more response info...\n    //   // const { statusCode, headers } = httpResponse;\n    // } catch (error) {\n    //   if (error instanceof ApiError) {\n    //     const errors = error.result;\n    //     // const { statusCode, headers } = error;\n    //   }\n    // }\n    */\n    return \"1234\";\n  },\n\n  /*\n  const response ={\n  \"payment\": {\n    \"id\": \"GQTFp1ZlXdpoW4o6eGiZhbjosiDFf\",\n    \"created_at\": \"2019-07-10T13:23:49.154Z\",\n    \"updated_at\": \"2019-07-10T13:23:49.446Z\",\n    \"amount_money\": {\n      \"amount\": 200,\n      \"currency\": \"USD\"\n    },\n    \"app_fee_money\": {\n      \"amount\": 10,\n      \"currency\": \"USD\"\n    },\n    \"total_money\": {\n      \"amount\": 200,\n      \"currency\": \"USD\"\n    },\n    \"status\": \"COMPLETED\",\n    \"source_type\": \"CARD\",\n    \"card_details\": {\n      \"status\": \"CAPTURED\",\n      \"card\": {\n        \"card_brand\": \"VISA\",\n        \"last_4\": \"1111\",\n        \"exp_month\": 7,\n        \"exp_year\": 2026,\n        \"fingerprint\": \"sq-1-TpmjbNBMFdibiIjpQI5LiRgNUBC7u1689i0TgHjnlyHEWYB7tnn-K4QbW4ttvtaqXw\",\n        \"card_type\": \"DEBIT\",\n        \"prepaid_type\": \"PREPAID\",\n        \"bin\": \"411111\"\n      },\n      \"entry_method\": \"ON_FILE\",\n      \"cvv_status\": \"CVV_ACCEPTED\",\n      \"avs_status\": \"AVS_ACCEPTED\",\n      \"auth_result_code\": \"nsAyY2\",\n      \"statement_description\": \"SQ *MY MERCHANT\"\n    },\n    \"location_id\": \"XTI0H92143A39\",\n    \"order_id\": \"m2Hr8Hk8A3CTyQQ1k4ynExg92tO3\",\n    \"reference_id\": \"123456\",\n    \"note\": \"Brief description\",\n    \"customer_id\": \"RDX9Z4XTIZR7MRZJUXNY9HUK6I\",\n    \"receipt_number\": \"GQTF\",\n    \"receipt_url\": \"https://squareup.com/receipt/preview/GQTFp1ZlXdpoW4o6eGiZhbjosiDFf\"\n  }\n}\n  /*\n{\n  \"errors\": [\n    {\n      \"code\": \"VALUE_EMPTY\",\n      \"detail\": \"Field must not be blank\",\n      \"field\": \"source_id\",\n      \"category\": \"INVALID_REQUEST_ERROR\"\n    },\n    {\n      \"code\": \"VALUE_EMPTY\",\n      \"detail\": \"Field must not be blank\",\n      \"field\": \"idempotency_key\",\n      \"category\": \"INVALID_REQUEST_ERROR\"\n    },\n    {\n      \"code\": \"MISSING_REQUIRED_PARAMETER\",\n      \"detail\": \"Field must be set\",\n      \"field\": \"amount_money\",\n      \"category\": \"INVALID_REQUEST_ERROR\"\n    }\n  ]\n}\n  */\n\n  async completePayment(model) {\n    console.log(\"REAL completing payment: %s\", model.orderNo);\n    return \"1234\";\n  },\n\n  async refundPayment(model) {\n    console.log(\"REAL refunding payment: %s\", model.orderNo);\n  },\n};\n","\"use strict\";\n\n/**\n * @typedef {import('../adapters/event-adapter').EventMessage} EventMessage\n */\n\n/**\n * @typedef {import('../adapters/event-adapter').CommandEvent} CommandEvent\n */\n\n/**\n * @callback shipOrder\n * @param {string} shipTo\n * @param {string} shipFrom\n * @param {string} lineItems\n * @param {string} signature\n * @param {string} externalId\n * @param {string} requester\n * @param {string} respondOn\n * @returns {EventMessage}\n */\n\n/**\n * @callback trackShipment\n * @param {string} shipmentId\n * @param {string} externalId\n * @param {string} requester\n * @param {string} respondOn\n * @returns {EventMessage}\n */\n\n/**\n * @typedef {string} functionName\n */\n\n/**\n * @typedef {Object} shippingService formats and parses shipping event messages\n * @property {string} serviceName - programmatic service name in eventSource/Target\n * @property {string} topic - event topic \"shippingChannel\" when sending messasges\n * @property {shipOrder} shipOrder - format event message requesting shipping label and pickup of order\n * @property {trackShipment} trackShipment - report on location/status of parcel\n * @property {function():EventMessage} verifyDelivery - ensure customer recieved parcel\n * @property {function():EventMessage} returnShipment - return to sender if refunding\n * @property {function(functionName,EventMessage):{[key]:string}} getPayload - extract payload\n */\n\nfunction createEventMessage({ requester, service, type, name, id, data }) {\n  return {\n    eventSource: requester,\n    eventTarget: service,\n    eventType: type,\n    eventName: name,\n    eventTime: new Date().getTime(),\n    eventUuid: id,\n    eventData: data,\n  };\n}\n\nfunction createCommandEvent(name, topic, args) {\n  return {\n    commandName: name,\n    commandResp: topic,\n    commandArgs: { ...args },\n  };\n}\n\n/**\n * Shipping service events\n * @type {shippingService}\n */\nexport const Shipping = {\n  serviceName: \"shippingService\",\n  topic: \"shippingChannel\",\n\n  /**\n   *\n   * @param {*} param0\n   * @returns {shipMessage}\n   */\n  shipOrder({\n    shipTo,\n    shipFrom,\n    lineItems,\n    signature,\n    externalId,\n    requester,\n    respondOn,\n  }) {\n    return createEventMessage({\n      requester,\n      service: this.serviceName,\n      type: \"command\",\n      name: this.shipOrder.name,\n      id: externalId,\n      data: createCommandEvent(this.shipOrder.name, respondOn, {\n        shipTo,\n        shipFrom,\n        lineItems,\n        signature,\n        externalId,\n      }),\n    });\n  },\n\n  /**\n   *\n   * @param {*} param0\n   * @returns {EventMessage}\n   */\n  trackShipment({ externalId, shipmentId, trackingId, requester, respondOn }) {\n    return createEventMessage({\n      requester,\n      service: this.serviceName,\n      type: \"command\",\n      name: this.trackShipment.name,\n      id: externalId,\n      data: createCommandEvent(this.trackShipment.name, respondOn, {\n        externalId,\n        shipmentId,\n        trackingId,\n      }),\n    });\n  },\n\n  /**\n   *\n   * @param {*} param0\n   * @returns {EventMessage}\n   */\n  verifyDelivery({ requester, respondOn, trackingId, externalId }) {\n    return createEventMessage({\n      requester,\n      service: this.serviceName,\n      type: \"command\",\n      name: this.verifyDelivery.name,\n      id: externalId,\n      data: createCommandEvent(this.verifyDelivery.name, respondOn, {\n        externalId,\n        trackingId,\n      }),\n    });\n  },\n\n  returnShipment({ requester, respondOn, shipmentId, externalId }) {\n    return createEventMessage({\n      requester,\n      service: this.serviceName,\n      type: \"command\",\n      id: externalId,\n      name: this.returnShipment.name,\n      data: createCommandEvent(this.returnShipment, respondOn, {\n        shipmentId,\n        externalId,\n      }),\n    });\n  },\n\n  getPayload(func, event) {\n    const payloads = {\n      [this.shipOrder.name]: {\n        shipmentId: event.eventData.shipmentId,\n      },\n      [this.trackShipment.name]: {\n        trackingId: event.eventData.trackingId,\n        trackingStatus: event.eventData.trackingStatus,\n      },\n      [this.verifyDelivery.name]: {\n        proofOfDelivery: event.eventData.proofOfDelivery,\n      },\n    };\n    return payloads[func];\n  },\n\n  getProperty(event, key) {\n    return event.eventData[key];\n  },\n};\n"],"sourceRoot":""}